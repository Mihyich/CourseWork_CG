#ifndef SHADOW_ALG_ENUM_H
#define SHADOW_ALG_ENUM_H

enum ShadowAlg
{
    NO_SHADOW = 0,
    NO_SHADOW_LIGHT,

    SHADOW_MAP_ORTHOGONAL,
    SHADOW_MAP_ORTHOGONAL_DEBUG,

    SHADOW_MAP_PERSPECTIVE,
    SHADOW_MAP_PERSPECTIVE_DEBUG,

    SHADOW_MAP_ORTHOGONAL_PCF,
    SHADOW_MAP_ORTHOGONAL_PCF_DEBUG,

    SHADOW_MAP_PERSPECTIVE_PCF,
    SHADOW_MAP_PERSPECTIVE_PCF_DEBUG,

    SHADOW_MAP_ORTHOGONAL_NOISE,
    SHADOW_MAP_ORTHOGONAL_NOISE_DEBUG,

    SHADOW_MAP_PERSPECTIVE_NOISE,
    SHADOW_MAP_PERSPECTIVE_NOISE_DEBUG,

    SHADOW_MAP_ORTHOGONAL_PCSS,
    SHADOW_MAP_ORTHOGONAL_PCSS_DEBUG,

    SHADOW_MAP_PERSPECTIVE_PCSS,
    SHADOW_MAP_PERSPECTIVE_PCSS_DEBUG,

    SHADOW_MAP_ORTHOGONAL_PCSS_NOISE,
    SHADOW_MAP_ORTHOGONAL_PCSS_NOISE_DEBUG,

    SHADOW_MAP_PERSPECTIVE_PCSS_NOISE,
    SHADOW_MAP_PERSPECTIVE_PCSS_NOISE_DEBUG,

    SHADOW_MAP_ORTHOGONAL_ESM,
    SHADOW_MAP_ORTHOGONAL_ESM_DEBUG,

    SHADOW_MAP_PERSPECTIVE_ESM,
    SHADOW_MAP_PERSPECTIVE_ESM_DEBUG,

    SHADOW_MAP_ORTHOGONAL_VSM,
    SHADOW_MAP_ORTHOGONAL_VSM_DEBUG,

    SHADOW_MAP_PERSPECTIVE_VSM,
    SHADOW_MAP_PERSPECTIVE_VSM_DEBUG,

    RAY_TRACING_DEBUG,
    RAY_TRACING_HARD_PERSPECTIVE,
    RAY_TRACING_SOFT_PERSPECTIVE,
};

#endif // SHADOW_ALG_ENUM_H