#ifndef LIGHT_STRUCT_H
#define LIGHT_STRUCT_H

#include "Vector3D.h"

enum LightType
{
    LIGHT_POINT = 0,
    LIGHT_SPOT
};

// Универсальный источник света
struct Light
{
    // Кратность 16 =========================================================================
    vec3 position;     // Позиция (12 байт)
    float pad0;        // Выравнивание для GLSL vec3 (еще 4 байта)
    // Кратность 16 =========================================================================
    vec3 direction;    // Направление (12 байт)
    float pad1;        // Выравнивание для GLSL vec3 (еще 4 байта)
    // Кратность 16 =========================================================================
    vec3 color;        // Цвет (12 байт)
    float pad2;        // Выравнивание для GLSL vec3 (еще 4 байта)
    // Кратность 16 =========================================================================
    float radius;      // Радиус действия (4 байта)
    float intensity;   // Интенсивность (4 байта)
    float innerCutoff; // Угол (в радианах) внутреннего конуса (4 байта)
    float outerCutoff; // Угол (в радианах) внешнего конуса (4 байта)
    // Кратность 16 =========================================================================
    float type;        // Тип источника света: 0 - PointLight; 1 - SpotLight (4 байта)
    float pad3;        // Дополнительные паддинги,
    float pad4;        // чтобы сделать размер структуры
    float pad5;        // кратным 16 (3 * 4 = 12 байт)
    // Кратность 16 =========================================================================
};

#endif // LIGHT_STRUCT_H